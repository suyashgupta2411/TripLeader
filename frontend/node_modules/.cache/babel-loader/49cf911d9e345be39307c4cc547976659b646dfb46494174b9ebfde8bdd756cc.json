{"ast":null,"code":"var _jsxFileName = \"/Users/suyashgupta/Downloads/tour-management-mid-eval/frontend/src/pages/Chatbot.jsx\",\n  _s = $RefreshSig$();\n// Chatbot.jsx\n\nimport React, { useState } from \"react\";\nimport SearchBar from \"../shared/SearchBar\";\nimport \"../styles/chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [generatedContent, setGeneratedContent] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [location, setLocation] = useState(\"\");\n  const handleContentUpdate = async (content, location) => {\n    setLoading(true);\n    setLocation(location); // Set the location received from the SearchBar\n\n    // Simulate delay for demonstration purpose\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    if (content && content.parts && content.parts.length > 0) {\n      const text = preprocessContent(content.parts[0].text);\n      setGeneratedContent(text);\n    } else {\n      setGeneratedContent(\"No content found\");\n    }\n    setLoading(false);\n  };\n  const preprocessContent = text => {\n    const boldSections = text.split(\"**\");\n    const processedText = boldSections.map((section, index) => {\n      if (index % 2 === 1) {\n        return /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: section\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }, this);\n      } else {\n        const lines = section.split(\". \");\n        return lines.map((line, idx) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [line, \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 20\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this));\n      }\n    });\n    return processedText;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gemini API Content Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onContentUpdate: handleContentUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generated-content\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"loading.gif\",\n          alt: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your itinerary is loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), !loading && generatedContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), location && /*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"600\",\n      height: \"450\",\n      frameBorder: \"0\",\n      style: {\n        border: 0\n      },\n      src: `https://www.google.com/maps/embed/v1/place?key=AIzaSyCcAk5BxsayUnsWDqGn03-X5C8XHSQEb9w&q=${encodeURIComponent(location)}`,\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"TwTlC10Be1+Lcn730ksUmylnHW4=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","SearchBar","Chatbot","generatedContent","setGeneratedContent","loading","setLoading","location","setLocation","handleContentUpdate","content","Promise","resolve","setTimeout","parts","length","text","preprocessContent","boldSections","split","processedText","map","section","index","lines","line","idx","border","encodeURIComponent"],"sources":["/Users/suyashgupta/Downloads/tour-management-mid-eval/frontend/src/pages/Chatbot.jsx"],"sourcesContent":["// Chatbot.jsx\n\nimport React, { useState } from \"react\";\nimport SearchBar from \"../shared/SearchBar\";\nimport \"../styles/chatbot.css\";\n\nconst Chatbot = () => {\n  const [generatedContent, setGeneratedContent] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [location, setLocation] = useState(\"\");\n\n  const handleContentUpdate = async (content, location) => {\n    setLoading(true);\n    setLocation(location); // Set the location received from the SearchBar\n\n    // Simulate delay for demonstration purpose\n    await new Promise((resolve) => setTimeout(resolve, 2000));\n\n    if (content && content.parts && content.parts.length > 0) {\n      const text = preprocessContent(content.parts[0].text);\n      setGeneratedContent(text);\n    } else {\n      setGeneratedContent(\"No content found\");\n    }\n\n    setLoading(false);\n  };\n\n  const preprocessContent = (text) => {\n    const boldSections = text.split(\"**\");\n    const processedText = boldSections.map((section, index) => {\n      if (index % 2 === 1) {\n        return <strong key={index}>{section}</strong>;\n      } else {\n        const lines = section.split(\". \");\n        return lines.map((line, idx) => (\n          <React.Fragment key={idx}>\n            {line}.<br />\n          </React.Fragment>\n        ));\n      }\n    });\n    return processedText;\n  };\n\n  return (\n    <div className=\"chatbot\">\n      <h1>Gemini API Content Generator</h1>\n      <SearchBar onContentUpdate={handleContentUpdate} />\n      <div className=\"generated-content\">\n        {loading && (\n          <div className=\"loading\">\n            <img src=\"loading.gif\" alt=\"Loading...\" />\n            <p>Your itinerary is loading...</p>\n          </div>\n        )}\n        <h2>Generated Content:</h2>\n        {!loading && generatedContent}\n      </div>\n\n      {/* Embed Google Maps iframe with the location */}\n      {location && (\n        <iframe\n          width=\"600\"\n          height=\"450\"\n          frameBorder=\"0\"\n          style={{ border: 0 }}\n          src={`https://www.google.com/maps/embed/v1/place?key=AIzaSyCcAk5BxsayUnsWDqGn03-X5C8XHSQEb9w&q=${encodeURIComponent(\n            location\n          )}`}\n          allowFullScreen\n        ></iframe>\n      )}\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}