{"ast":null,"code":"var _jsxFileName = \"/Users/suyashgupta/Downloads/tour-management-mid-eval/frontend/src/pages/Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport SearchBar from \"../shared/SearchBar\";\nimport \"../styles/chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [generatedContent, setGeneratedContent] = useState(\"\");\n  const interactWithGeminiAPI = async prompt => {\n    try {\n      const response = await fetch(\"https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=AIzaSyBGTmycbxpfyZsvSn2_vzGqU25QIRzLl-0\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          contents: [{\n            parts: [{\n              text: prompt\n            }]\n          }]\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch data from Gemini API\");\n      }\n      const result = await response.json();\n      if (result.contents && result.contents[0].parts && result.contents[0].parts[0].text) {\n        setGeneratedContent(result.contents[0].parts[0].text);\n      } else {\n        setGeneratedContent(\"Error fetching data from Gemini API\");\n      }\n    } catch (error) {\n      console.error(\"Error interacting with Gemini API:\", error);\n      setGeneratedContent(\"Error interacting with Gemini API. Please check your API key and try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gemini API Content Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: interactWithGeminiAPI\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generated-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: generatedContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"Y0OBIxlJx+sEJtejBomAILttq9s=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","SearchBar","Chatbot","generatedContent","setGeneratedContent","interactWithGeminiAPI","prompt","response","fetch","method","headers","body","JSON","stringify","contents","parts","text","ok","Error","result","json","error","console"],"sources":["/Users/suyashgupta/Downloads/tour-management-mid-eval/frontend/src/pages/Chatbot.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport SearchBar from \"../shared/SearchBar\";\nimport \"../styles/chatbot.css\";\n\nconst Chatbot = () => {\n  const [generatedContent, setGeneratedContent] = useState(\"\");\n\n  const interactWithGeminiAPI = async (prompt) => {\n    try {\n      const response = await fetch(\n        \"https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=AIzaSyBGTmycbxpfyZsvSn2_vzGqU25QIRzLl-0\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            contents: [\n              {\n                parts: [\n                  {\n                    text: prompt,\n                  },\n                ],\n              },\n            ],\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch data from Gemini API\");\n      }\n\n      const result = await response.json();\n\n      if (\n        result.contents &&\n        result.contents[0].parts &&\n        result.contents[0].parts[0].text\n      ) {\n        setGeneratedContent(result.contents[0].parts[0].text);\n      } else {\n        setGeneratedContent(\"Error fetching data from Gemini API\");\n      }\n    } catch (error) {\n      console.error(\"Error interacting with Gemini API:\", error);\n      setGeneratedContent(\n        \"Error interacting with Gemini API. Please check your API key and try again.\"\n      );\n    }\n  };\n\n  return (\n    <div className=\"chatbot\">\n      <h1>Gemini API Content Generator</h1>\n      <SearchBar onSearch={interactWithGeminiAPI} />{\" \"}\n      {/* Pass the function as a prop */}\n      <div className=\"generated-content\">\n        <h2>Generated Content:</h2>\n        <p>{generatedContent}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAO,uBAAuB;AAAC;AAE/B,MAAMC,OAAO,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAE5D,MAAMK,qBAAqB,GAAG,MAAOC,MAAM,IAAK;IAC9C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gIAAgI,EAChI;QACEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,CACL;cACEC,IAAI,EAAEV;YACR,CAAC;UAEL,CAAC;QAEL,CAAC;MACH,CAAC,CACF;MAED,IAAI,CAACC,QAAQ,CAACU,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;MACzD;MAEA,MAAMC,MAAM,GAAG,MAAMZ,QAAQ,CAACa,IAAI,EAAE;MAEpC,IACED,MAAM,CAACL,QAAQ,IACfK,MAAM,CAACL,QAAQ,CAAC,CAAC,CAAC,CAACC,KAAK,IACxBI,MAAM,CAACL,QAAQ,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAChC;QACAZ,mBAAmB,CAACe,MAAM,CAACL,QAAQ,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;MACvD,CAAC,MAAM;QACLZ,mBAAmB,CAAC,qCAAqC,CAAC;MAC5D;IACF,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC1DjB,mBAAmB,CACjB,6EAA6E,CAC9E;IACH;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA,wBACtB;MAAA,UAAI;IAA4B;MAAA;MAAA;MAAA;IAAA,QAAK,eACrC,QAAC,SAAS;MAAC,QAAQ,EAAEC;IAAsB;MAAA;MAAA;MAAA;IAAA,QAAG,EAAC,GAAG,eAElD;MAAK,SAAS,EAAC,mBAAmB;MAAA,wBAChC;QAAA,UAAI;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAK,eAC3B;QAAA,UAAIF;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACrB;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GA5DID,OAAO;AAAA,KAAPA,OAAO;AA8Db,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}