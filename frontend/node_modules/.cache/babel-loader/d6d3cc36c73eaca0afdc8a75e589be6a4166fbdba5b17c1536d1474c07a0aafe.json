{"ast":null,"code":"var _jsxFileName = \"/Users/suyashgupta/Downloads/tour-management-mid-eval/frontend/src/pages/Explore.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; // Assuming you'll use Axios for fetching data\nimport parse from \"html-react-parser\"; // Library for parsing HTML content\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Explore = () => {\n  _s();\n  const [places, setPlaces] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"https://www.incredibleindia.org/content/incredible-india-v2/en.html\");\n        const htmlContent = response.data; // Assuming the response contains HTML content\n        const parsedData = parse(htmlContent); // Parse HTML content to extract information\n        setPlaces(parsedData); // Set the parsed data as places\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"explore-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Explore\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"places-list\",\n      children: places.map((place, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"place\",\n        children: place\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Explore, \"arlxcboDVTTA/nE6JcCJcLsoG6w=\");\n_c = Explore;\nexport default Explore;\nvar _c;\n$RefreshReg$(_c, \"Explore\");","map":{"version":3,"names":["React","useState","useEffect","axios","parse","Explore","places","setPlaces","loading","setLoading","error","setError","fetchData","response","get","htmlContent","data","parsedData","message","map","place","index"],"sources":["/Users/suyashgupta/Downloads/tour-management-mid-eval/frontend/src/pages/Explore.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; // Assuming you'll use Axios for fetching data\nimport parse from \"html-react-parser\"; // Library for parsing HTML content\n\nconst Explore = () => {\n  const [places, setPlaces] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          \"https://www.incredibleindia.org/content/incredible-india-v2/en.html\"\n        );\n        const htmlContent = response.data; // Assuming the response contains HTML content\n        const parsedData = parse(htmlContent); // Parse HTML content to extract information\n        setPlaces(parsedData); // Set the parsed data as places\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"explore-page\">\n      <h1>Explore</h1>\n      {loading && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      <div className=\"places-list\">\n        {places.map((place, index) => (\n          <div key={index} className=\"place\">\n            {place}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Explore;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,KAAK,MAAM,mBAAmB,CAAC,CAAC;AAAA;AAEvC,MAAMC,OAAO,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAC9B,qEAAqE,CACtE;QACD,MAAMC,WAAW,GAAGF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACnC,MAAMC,UAAU,GAAGb,KAAK,CAACW,WAAW,CAAC,CAAC,CAAC;QACvCR,SAAS,CAACU,UAAU,CAAC,CAAC,CAAC;QACvBR,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACQ,OAAO,CAAC;QACvBT,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,cAAc;IAAA,wBAC3B;MAAA,UAAI;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,EACfJ,OAAO,iBAAI;MAAA,UAAG;IAAU;MAAA;MAAA;MAAA;IAAA,QAAI,EAC5BE,KAAK,iBAAI;MAAA,WAAG,SAAO,EAACA,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAC/B;MAAK,SAAS,EAAC,aAAa;MAAA,UACzBJ,MAAM,CAACa,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvB;QAAiB,SAAS,EAAC,OAAO;QAAA,UAC/BD;MAAK,GADEC,KAAK;QAAA;QAAA;QAAA;MAAA,QAGhB;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAtCIhB,OAAO;AAAA,KAAPA,OAAO;AAwCb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}